@{
    Layout = "~/user/theme/field3/com/框架.cshtml";
}
<!-- 引用 -->
@using System.Web.Configuration;

@using WaterLibrary.stru.MySQL;
@using WaterLibrary.stru.pilipala;
@using WaterLibrary.stru.pilipala.PostKey;
@using WaterLibrary.com.basic;
@using PILIPALA.system.serv;
@using PILIPALA.user.theme.field3.serv;

@using WaterLibrary.com.CommentLake;
@using WaterLibrary.stru.CommentLake;
@using Markdig;

<!-- 服务初始化 -->
@{ SysServ SysServ = new SysServ(); }
<!-- 变量初始化 -->
@{
    Post Post = new Post();
    int ID = new int();

    int PrevID = new int();
    int NextID = new int();

    /* mkd */
    var builder = new Markdig.MarkdownPipelineBuilder();
    builder.Extensions.Add(new Markdig.Extensions.Tables.PipeTableExtension());
    var pipeline = builder.Build();
}
<!-- 其他初始化 -->
@if (Request.QueryString["ID"] != null)
{
    /* 获得请求的text_id */
    ID = Convert.ToInt32(Request.Params["ID"]);

    /* 合并表 */
    Post = SysServ.PLDR.GetTotal(ID);

    /* 前后文章标题赋值 */
    PrevID = SysServ.PLDR.PrevID("生活|技术", ID);
    NextID = SysServ.PLDR.NextID("生活|技术", ID);
}
<!-- CommentLake评论系统初始化 -->
@{
    CommentLake CommentLake = new CommentLake(new MySqlConn
    {
        DataSource = WebConfigurationManager.AppSettings["DataSource"],
        DataBase = WebConfigurationManager.AppSettings["DataBase"],
        Port = WebConfigurationManager.AppSettings["Port"],
        User = WebConfigurationManager.AppSettings["User"],
        PWD = WebConfigurationManager.AppSettings["PWD"]
    }, "comment_lake");

    List<Comment> CommentList = CommentLake.GetCommentList(ID);
}

@section 内容
    {
    <div class="Card L M bSha bRds">
        <div class="contain L bRds">

            @Html.Raw(Post.Cover)

            @if (Post.Title != "")
            {
                <div class="Title">@Post.Title</div>
            }
            @if (Post.Summary != "")
            {
                <div class="Summary">@Post.Summary</div>
            }

            <!-- 状态信息输出 -->
            @if (Post.Mode == "sche")
            {
                <div class="SchedulTip bSha"><div class="con">计划中的项目。此文章将会于近期更新</div></div>
            }
            @if (Post.Mode == "archived")
            {
                <div class="ArchivTip bSha"><div class="con">此文章已归档。这意味着其内容将不受维护，但仍具有一定的参考价值。</div></div>
            }

            <div class="ReadTimeTip bSha">
                <div class="con"></div>
            </div>

            <div class="Content">@Html.Raw(Markdown.ToHtml(Post.Content, pipeline))</div>

            <!-- 上下文章按钮 -->
            <div>
                @if (NextID != -1)
                {
                    <div class="nxtBtn L bRds cur" onclick="up();showPost(@NextID)">@(SysServ.PLDR.Get<Title>(NextID))</div>
                }
                @if (PrevID != -1)
                {
                    <div class="pvsBtn R bRds cur" onclick="up();showPost(@PrevID)">@(SysServ.PLDR.Get<Title>(PrevID))</div>
                }
            </div>
        </div>

        <script>
            /*代码高亮启用*/
            hljs.initHighlighting.called = false;
            hljs.initHighlighting();
            /*在.Tip内输出字数统计*/
            putWordCount();
        </script>

    </div>

    <div class="CoBox L M bSha">
        <span class="text_auth L">由 @Post.User 最后编辑于 @ThemeServ.OnlyDate(Post.LCT, "/")</span>
        <span title="文章MD5签名 : @Post.MD5" class="text_mId R">@Post.MD5.Substring(0, 7)</span>

        <div class="AtBox L bRds-b">
            <div class="Date">于@(ThemeServ.OnlyDate(Post.CT, "-"))创建</div>
            <div class="UVCount">@Post.UVCount</div>
            <div class="CommentCount cur">@CommentLake.GetCommentCount(ID)</div>
            <div class="StarCount cur" onclick="refre_StarCount(@ID)">@Post.StarCount</div>
            <div class="Time">@ThemeServ.OnlyWeekTime(Post.CT)</div>

            @if (Post.Archiv != "")
            {/* 归档不为空时输出 */
                <div class="Archiv">@Post.Archiv</div>
            }
            @if (Post.Label != "")
            {/* 标签不为空时输出 */
                foreach (string str in WaterLibrary.com.basic.ConvertH.StringToList(Post.Label, '$'))
                {
                    <div class="Label">@str</div>
                }
            }
        </div>
    </div>

    <!-- CommentLake模块，测试性功能 -->
    <div>
        @if (CommentList.Count == 0)
        {
            <div class="ShadowBox L M">
                <div class="CommentTip bSha">
                    <div class="con">评论尚无，快来吃个螃蟹！</div>
                </div>
            </div>
        }
        else
        {
            <div class="CommentList L M bSha bRds">
                @foreach (Comment Comment in CommentList)
                {
                    <div class="Box bSha" onmouseover="CommentList_Over(this)" onmouseleave="CommentList_Leave(this)">
                        @if (Comment.HEAD == 0)
                        {
                            <div class="Name">@Comment.User</div>
                        }
                        else
                        {
                            /* 存在回复 */
                            foreach (Comment temp in CommentList)
                            {
                                if (temp.CommentID == Convert.ToInt32(Comment.HEAD))
                                {
                                    <div class="Name">
                                        @(Comment.User)(回复)
                                        <span class="ReplyLogo"></span>
                                        <span class="ReplyFloor">@(temp.Floor)F</span>@temp.User
                                    </div>
                                    break;
                                }
                            }
                        }

                        <div class="Floor cur bSha" data-f="@Comment.Floor" data-id="@Comment.CommentID" onclick="CommentBox.doReply(this)">@Comment.Floor</div>
                        <div class="Email">@Comment.Email</div>
                        <div class="Time">@ThemeServ.OnlyDate(Comment.Time, "-") | @ThemeServ.OnlyTime(Comment.Time)</div>
                        <div class="Content">@Comment.Content</div>
                    </div>
                }
            </div>
        }

        <div id="CommentBox" class="CommentBox M bRds bSha">
            <div class="Content">
                <div class="Logo"></div>
                <div class="ReplyLogo" v-show="HEAD"></div>
                <transition name="fade">
                    <div class="ReplyFloor cur" v-show="HEAD" v-on:click="closeReply" onmouseover="CommentBox_ReplyBtn_Over()"
                         onmouseleave="CommentBox_ReplyBtn_Leave()">
                        {{FloorText}}
                    </div>
                </transition>
                <textarea v-model="Content" placeholder="评论内容(必填)"></textarea>
            </div>
            <div class="Name">
                <div class="Logo"></div>
                <input v-model="Name" placeholder="昵称(必填)" />
            </div>
            <div class="Email">
                <div class="Logo"></div>
                <input v-model="Email" placeholder="邮箱(必填)" />
            </div>
            <div class="WebSite">
                <div class="Logo"></div>
                <input v-model="WebSite" placeholder="网站(可选)" />
            </div>
            <div class="Captcha">
                <div class="Logo"></div>
                <!--No-Captcha渲染的位置，其中 class 中必须包含 nc-container-->
                <div id="ali-safe" class="nc-container CaptchaLine"></div>
            </div>
        </div>

    </div>



    <!-- 评论组件 -->
    <script>
        var CommentBox = new Vue({
            el: '#CommentBox',
            data: {
                FloorText: '0F',

                HEAD: 0,
                Content: '',
                Name: '',
                Email: '',
                WebSite: ''
            },
            methods: {
                check: function () {
                    if (ContentCheck(this.Content) &
                        NameCheck(this.Name) &
                        EmailCheck(this.Email) &
                        WebSiteCheck(this.WebSite)) {
                        //TODO
                        return true;
                    } else {
                        //TODO
                        __nc.reload();
                        window.alert("请检查填写是否有误");
                        return false;
                    }
                },
                doReply: function (el) {
                    this.FloorText = el.dataset.f + "F";
                    this.HEAD = el.dataset.id;
                },
                closeReply: function () {
                    /* HEAD为0时，回复不会显示 */
                    this.HEAD = 0;
                }
            }
        })

        /* 鼠标移入移出回复按钮事件 */
        var FloorText_temp;
        function CommentBox_ReplyBtn_Over() {
            FloorText_temp = CommentBox.FloorText;
            CommentBox.FloorText = "取消";
        }
        function CommentBox_ReplyBtn_Leave() {
            CommentBox.FloorText = FloorText_temp;
        }
        function CommentList_Over(el) {
            $(el).children(".Floor").text("回复");
            $(el).children(".Floor").css({
                "height": "22px",
                "width": "32px",

                "font-size": "0.8em",
                "font-weight": "500",
                "font-family": "Source Sans Pro",
                "color": "rgb(255, 255, 255)",
                "line-height": "22px",

                "background": "rgb(0, 180, 255)"
            });
        }
        function CommentList_Leave(el) {
            /* 把属性data-f赋给内容 */
            $(el).children(".Floor").text($(el).children(".Floor").attr("data-f"));
            /* 移除添加的样式 */
            $(el).children(".Floor").removeAttr("style", "");
        }

        /*评论检查*/
        function ContentCheck(value) {
            if (value == "") {
                return false;
            } else {
                if (value.length > 320) {
                    return false;
                } else {
                    return true;
                }
            }
        };
        function NameCheck(value) {
            if (value == "") {
                return false;
            } else {
                if (value.length > 12) {
                    return false;
                } else {
                    return true;
                }
            }
        };
        function EmailCheck(value) {
            if (value == "") {
                return false;
            } else {
                var reg = /^([A-Za-z0-9_\-\.])+\@@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/;
                if (!reg.test(value)) {
                    return false;
                } else {
                    return true;
                }
            }
        };
        function WebSiteCheck(value) {
            if (value == "") {
                return true;
            } else {
                var reg0 = /^(http|https|ftp)\:\/\/([a-zA-Z0-9]([a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])?\.)+[a-zA-Z]{2,6}(\/)?$/;
                if (!reg0.test(value)) {
                    return false;
                } else {
                    return true;
                }
            }
        };
    </script>

    <!-- 评论Captcha -->
    <script>
        var nc_token = ["FFFF0N0000000000987D", (new Date()).getTime(), Math.random()].join(':');
        var NC_Opt =
        {
            renderTo: "#ali-safe",
            appkey: "FFFF0N0000000000987D",
            scene: "nc_bbs",
            token: nc_token,
            trans: { "key1": "code0" },
            elementID: ["usernameID"],
            is_Opt: 0,
            language: "cn",
            isEnabled: true,
            timeout: 3000,
            times: 5,
            callback: function (data) {
                if (CommentBox.check() == true) {
                    Captcha(nc_token, data.csessionid, data.sig, @ID, CommentBox.HEAD, CommentBox.Content, CommentBox.Name, CommentBox.Email, CommentBox.WebSite);
                }
            }
        }
        var nc = new noCaptcha(NC_Opt)
        nc.upLang('cn', {
            _startTEXT: "提交评论",
            _yesTEXT: "提交成功",
            _error300: "提交失败",
            _errorNetwork: "网络错误",
        })
    </script>
}
